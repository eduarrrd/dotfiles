# Use screen style shortcut
set-option -g prefix C-a
# Start numbering windows at 1 to agree with keyboard layout
set -g base-index 1
set -g pane-base-index 1

# force a reload of the config file
unbind r
bind-key r source-file ~/.tmux.conf

# USEFUL?
set -g default-terminal "screen-256color"

set -s escape-time 0

# Allow "^a a" to cause a "^a" in a nested tmux session
bind-key a  send-prefix

bind-key '~' split-window "exec htop"
bind-key b set-option status

bind-key -n C-right next
bind-key -n C-left prev
bind-key -n F1 select-window -t :1
bind-key -n F2 select-window -t :2
bind-key -n F3 select-window -t :3
bind-key -n F4 select-window -t :4
bind-key -n F5 select-window -t :5

set -g history-limit 10000
set -g set-titles on
set-window-option -g automatic-rename on

set -g set-titles-string "tmux:#I [ #T ]"

# mouse
set -g mouse on
bind-key -T copy-mode-emacs WheelUpPane send-keys -X halfpage-up
bind-key -T copy-mode-emacs WheelDownPane send-keys -X halfpage-down
bind-key -T copy-mode-emacs Enter send-keys -X copy-pipe-and-cancel "xsel -i --clipboard"
bind-key -T copy-mode-vi WheelUpPane send-keys -X halfpage-up
bind-key -T copy-mode-vi WheelDownPane send-keys -X halfpage-down
bind-key -T copy-mode-vi Enter send-keys -X copy-pipe-and-cancel "xsel -i --clipboard"
bind-key -T copy-mode-vi y send-keys -X copy-pipe-and-cancel "xsel -i --clipboard"

# reload environment
bind-key e send-keys "eval $(tmux show-environment -s)" Enter

# quick pane cycling
unbind ^A
bind-key ^A select-pane -t :.+

# Smart pane switching with awareness of vim splits
# combine with vim plugin christoomey/vim-tmux-navigator
is_vim='echo "#{pane_current_command}" | grep -iqE "(^|\/)g?(view|n?vim?)(diff)?$"'
bind-key -n C-h if-shell "$is_vim" "send-keys C-h" "select-pane -L"
bind-key -n C-j if-shell "$is_vim" "send-keys C-j" "select-pane -D"
bind-key -n C-k if-shell "$is_vim" "send-keys C-k" "select-pane -U"
bind-key -n C-l if-shell "$is_vim" "send-keys C-l" "select-pane -R"
bind-key -n C-\\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"

# border colours

set -g pane-border-style fg=magenta
set -g pane-active-border-style fg=magenta,bg=default

# statusbar --------------------------------------------------------------
set -g window-status-format "#I:#W"
set -g window-status-current-format "#I:#W"

set -g status-keys vi
bind-key -T vi-edit Up send-keys -X history-up
bind-key -T vi-edit Down send-keys -X history-down

set -g status-interval 1
set -g status-justify centre # center align window list

# default statusbar colors
set -g status-fg white
set -g status-bg default

# bell colours
set -g window-status-bell-style bg=default,fg=red,bright


set -g status-style bright
set -g status-right-length 50
set -g status-left-length 50

# default window title colors
set-window-option -g window-status-style fg=black,bg=default,bright

# active window title colours
set-window-option -g window-status-current-style fg=white,bg=default,dim

# message colours
set -g message-style fg=magenta,bg=default,bright

set -g status-left "#[fg=blue]#H/#(uname -r)"
set -g status-right "#[fg=yellow]#(uptime -p) #[fg=black]â€¢ #[fg=cyan]%Y-%m-%d %H:%M %Z#[default]"
